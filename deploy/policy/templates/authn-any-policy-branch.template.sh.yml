#!/bin/bash

### This policy is defined to verify that hosts can authenticate with Conjur
### from anywhere in the policy branch, to retrieve secrets for k8s

set -euo pipefail
cat << EOL
---
# Define a policy and add hosts to it
- !policy
  id: some-apps
  owner: !group devops
  annotations:
    description: Identities permitted to authenticate
  body:
    - !layer
      annotations:
        description: Layer of authenticator identities permitted to call authn svc
    - &hosts
      - !host
        id: ${APP_NAMESPACE_NAME}/*/*
        annotations:
          kubernetes/authentication-container-name: cyberark-secrets-provider-for-k8s

      # This host tests the ability to authenticate hosts with application identity in annotations
      - !host
        id: annotations-app
        annotations:
          authn-k8s/namespace: ${APP_NAMESPACE_NAME}
          authn-k8s/service-account: ${APP_NAMESPACE_NAME}-sa
          authn-k8s/authentication-container-name: cyberark-secrets-provider-for-k8s

    - !grant
      role: !layer
      members: *hosts

# Define host under root
- !host
  id: ${APP_NAMESPACE_NAME}/*/*
  annotations:
    kubernetes/authentication-container-name: cyberark-secrets-provider-for-k8s

# Add the root based host to the "some-apps" layer so we can give it permissions easily
- !grant
  role: !layer some-apps
  members: !host ${APP_NAMESPACE_NAME}/*/*

# Allow the host to retrieve the required secrets
- !grant
  role: !layer secrets/users
  members: !layer some-apps

# Inherit test-app's permissions
- !grant
  role: !layer test-app
  members: !layer some-apps

# Allow the host to authenticate with the authn-k8s authenticator
- !grant
  role: !layer conjur/authn-k8s/${AUTHENTICATOR_ID}/users
  members: !layer some-apps
EOL
